용어정리

IOC : 제어의 역전. 라이브러리의 코드가 개발자가 작성한 코드를 호출한다.

DI : 의존성 주입

Advice : 횡단 관심사 기능을 구현한 것

Aspect : 로직의 분리,
새로운 클래스를 만들어서 별도의 공간에  배치
하지만 작동시켰을때 같은 동작을 한다 ex프록시
Advice + Pointcut

횡단 관심사 :
핵심로직이 아닌 부가적인 로직
예를 들어 로깅같은 경우 비즈니스로직과 전혀 관련이 없지만
반드시 필요하다.
이런 경우 비즈니스로직과 별도로 분리하자

AOP :
프록시 로직을 반복하지 않고 한방에 해결한다.
전역적으로 프록시객체를 만들자.

Pointcut :
부가로직을 어디에 적용할 것인가 (대상선택전략)

위빙 Weaving :
프록시를 타겟 객체에 연결

Proxy : Advice를 target객체에 적용하면서 생기는 객체

Advisor : 조인포인트에 어드바이스를 적용
어드바이스를 어디에 적용할것인가라는 정보까지 갖고있는


AsPectJExpressionPointcut : AspectJ 위버를 사용


