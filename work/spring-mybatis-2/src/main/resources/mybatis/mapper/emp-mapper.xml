<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.EmpDao">

	<!-- public int insert(Emp emp); -->
	<!-- 
		수정쿼리인 경우, 메소드의 리턴 값으로 "영향받은 로우의 개수"를 마이바티스가 알아서 처리한다.
	 -->
	<insert id="insert">
		insert into EMP (ename, job, sal) values (#{ename}, #{job}, #{sal})
		
		<selectKey resultType="int" order="AFTER" keyProperty="empno">
			select LAST_INSERT_ID() as empno
		</selectKey>
	</insert>

	<!-- 	public int update(Emp emp);  -->
	<update id="update">
		update EMP set ename=#{enmae}, job=#{job}, sal=#{sal}
		where empno=#{empno}
	</update>

	<!--  public int delete(int empno);  -->
	<delete id="delete">
		delete from EMP where empno=#{empno}
	</delete>

	<!-- public List<Emp> findAll(); -->
	<!-- 1. 칼럼명들 == 멤버변수명들, 마이바티스가 알아서 처리 -->
	<select id="findAll" resultMap="empRowMapper">
		select * from emp order by empno asc
	</select>
	
	<!-- public int count(); -->
	<select id="count" resultType="int">
		select count(*) from emp
	</select>

	<!-- public Emp findOne(int empno); -->
	<select id="findOne" resultType="Emp" >
		select * from emp where empno=#{empno}
	</select>
	
	<!-- 
		@Results(id="empRowMapper", value={
			@Result(property="empno", column="empno"),
			@Result(property="ename", column="ename"),
			@Result(property="job", column="job"),
			@Result(property="sal", column="sal")
		})
	 -->
	<resultMap type="Emp" id="empRowMapper">
		<result property="empno" column="empno" />
		<result property="ename" column="ename" />
		<result property="job" column="job" />
		<result property="sal" column="sal" />
	</resultMap>
	
	<select id="findSkipLimit" resultMap="empRowMapper">
		select * from emp order by empno asc limit #{skip}, #{limit}
	</select>
	
	<select id="findPageSize" resultMap="empRowMapper">
		select * from emp order by empno asc limit #{skip}, #{limit}
	</select>
	
	<!-- 
		select * from emp 
		where empno between #{start} and #{end}
		order by empno asc
		
		select * from emp 
		where empno >= #{start} and empno <= #{end}
		order by empno asc
		>, < 기호 사용 시 에러가 발생한다.
		
		해결방법 2가지
		1. 치환기호를 사용한다.
		select * from emp 
		where empno &gt;= #{start} and empno &lt;= #{end}
		order by empno asc
		
		
		2. CDATA 섹션으로 감싼다. 범위 안에 태그가 존재하지 않는다는 뜻이다.
	 -->
	<select id="findStartEnd" resultMap="empRowMapper">
		<![CDATA[
			select * from emp 
			where empno >= #{start} and empno <= #{end}
			order by empno asc
		]]>
	</select>
	
	<!-- CONCAT('%', #{ename}, '%') -->
	<!-- 디비에선 '' 안붙이면 모두 숫자 -->
	<select id="search" resultMap="empRowMapper">
			select * from emp 
			where 
			<if test="ename != null">
				ename like CONCAT('%',#{ename},'%')</if>
			<if test="job != null">
				and job like CONCAT('%',#{job},'%')</if>
			<if test="salMin != null and salMax != null">				
				and sal <![CDATA[>=]]> #{salMin} 
				and sal <![CDATA[<=]]> #{salMax}				
			</if>
	</select>
	
</mapper>